// <auto-generated />

using Microsoft.EntityFrameworkCore.Migrations;

namespace Esentis.Horudom.Persistence.Migrations
{
	public partial class fixedtables : Migration
	{
		protected override void Up(MigrationBuilder migrationBuilder)
		{
			migrationBuilder.DropTable(
				name: "MoviePosters");

			migrationBuilder.DropTable(
				name: "MovieScreenshots");

			migrationBuilder.AddColumn<long>(
				name: "MovieId",
				table: "Screenshots",
				nullable: false,
				defaultValue: 0L);

			migrationBuilder.AddColumn<long>(
				name: "MovieId",
				table: "Posters",
				nullable: false,
				defaultValue: 0L);

			migrationBuilder.CreateIndex(
				name: "IX_Screenshots_MovieId",
				table: "Screenshots",
				column: "MovieId");

			migrationBuilder.CreateIndex(
				name: "IX_Posters_MovieId",
				table: "Posters",
				column: "MovieId");

			migrationBuilder.AddForeignKey(
				name: "FK_Posters_Movies_MovieId",
				table: "Posters",
				column: "MovieId",
				principalTable: "Movies",
				principalColumn: "Id",
				onDelete: ReferentialAction.Restrict);

			migrationBuilder.AddForeignKey(
				name: "FK_Screenshots_Movies_MovieId",
				table: "Screenshots",
				column: "MovieId",
				principalTable: "Movies",
				principalColumn: "Id",
				onDelete: ReferentialAction.Restrict);
		}

		protected override void Down(MigrationBuilder migrationBuilder)
		{
			migrationBuilder.DropForeignKey(
				name: "FK_Posters_Movies_MovieId",
				table: "Posters");

			migrationBuilder.DropForeignKey(
				name: "FK_Screenshots_Movies_MovieId",
				table: "Screenshots");

			migrationBuilder.DropIndex(
				name: "IX_Screenshots_MovieId",
				table: "Screenshots");

			migrationBuilder.DropIndex(
				name: "IX_Posters_MovieId",
				table: "Posters");

			migrationBuilder.DropColumn(
				name: "MovieId",
				table: "Screenshots");

			migrationBuilder.DropColumn(
				name: "MovieId",
				table: "Posters");

			migrationBuilder.CreateTable(
				name: "MoviePosters",
				columns: table => new
				{
					MovieId = table.Column<long>(type: "bigint", nullable: false),
					PosterId = table.Column<int>(type: "integer", nullable: false)
				},
				constraints: table =>
				{
					table.PrimaryKey("PK_MoviePosters", x => new { x.MovieId, x.PosterId });
					table.ForeignKey(
						name: "FK_MoviePosters_Movies_MovieId",
						column: x => x.MovieId,
						principalTable: "Movies",
						principalColumn: "Id",
						onDelete: ReferentialAction.Restrict);
					table.ForeignKey(
						name: "FK_MoviePosters_Posters_PosterId",
						column: x => x.PosterId,
						principalTable: "Posters",
						principalColumn: "Id",
						onDelete: ReferentialAction.Restrict);
				});

			migrationBuilder.CreateTable(
				name: "MovieScreenshots",
				columns: table => new
				{
					MovieId = table.Column<long>(type: "bigint", nullable: false),
					ScreenshotId = table.Column<int>(type: "integer", nullable: false)
				},
				constraints: table =>
				{
					table.PrimaryKey("PK_MovieScreenshots", x => new { x.MovieId, x.ScreenshotId });
					table.ForeignKey(
						name: "FK_MovieScreenshots_Movies_MovieId",
						column: x => x.MovieId,
						principalTable: "Movies",
						principalColumn: "Id",
						onDelete: ReferentialAction.Restrict);
					table.ForeignKey(
						name: "FK_MovieScreenshots_Screenshots_ScreenshotId",
						column: x => x.ScreenshotId,
						principalTable: "Screenshots",
						principalColumn: "Id",
						onDelete: ReferentialAction.Restrict);
				});

			migrationBuilder.CreateIndex(
				name: "IX_MoviePosters_PosterId",
				table: "MoviePosters",
				column: "PosterId");

			migrationBuilder.CreateIndex(
				name: "IX_MovieScreenshots_ScreenshotId",
				table: "MovieScreenshots",
				column: "ScreenshotId");
		}
	}
}
